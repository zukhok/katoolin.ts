class Toollist
{
  all:string[];

  top10=
  [
    "aircrack-ng",
    "burpsuite",
    "crackmapexec",
    "hydra",
    "john",
    "metasploit-framework",
    "nmap",
    "responder",
    "sqlmap",
    "wireshark",
  ];

  "802_11"=
  [
    "aircrack-ng",
    "airgeddon",
    "asleap",
    "bully",
    "cowpatty",
    "eapmd5pass",
    "fern-wifi-cracker",
    "freeradius-wpe",
    "hashcat",
    "hostapd-wpe",
    "iw",
    "kismet",
    "macchanger",
    "mdk3",
    "mdk4",
    "pixiewps",
    "reaver",
    "wifi-honey",
    "wifite",
  ];

  bluetooth=
  [
    "bluelog",
    "blueranger",
    "bluesnarfer",
    "bluez",
    "bluez-hcidump",
    "btscanner",
    "crackle",
    "redfang",
    "spooftooph",
    "ubertooth",
  ];

  crypto_stego=
  [
    "aesfix",
    "aeskeyfind",
    "ccrypt",
    "outguess",
    "steghide",
    "stegsnow",
  ];

  database=
  [
    "jsql-injection",
    "mdbtools",
    "oscanner",
    "sidguesser",
    "sqldict",
    "sqlitebrowser",
    "sqlmap",
    "sqlninja",
    "sqlsus",
    "tnscmd10g",
  ];

  detect=
  [
    "grokevt",
    "sentrypeer",
  ];

  exploitation=
  [
    "armitage",
    "beef-xss",
    "exploitdb",
    "metasploit-framework",
    "msfpc",
    "set",
    "shellnoob",
    "sqlmap",
    "termineter",
  ];

  forensics=
  [
    "afflib-tools",
    "apktool",
    "autopsy",
    "binwalk",
    "bulk-extractor",
    "bytecode-viewer",
    "cabextract",
    "chkrootkit",
    "creddump7",
    "dc3dd",
    "dcfldd",
    "ddrescue",
    "dumpzilla",
    "edb-debugger",
    "ewf-tools",
    "exifprobe",
    "exiv2",
    "ext3grep",
    "ext4magic",
    "extundelete",
    "fcrackzip",
    "firmware-mod-kit",
    "foremost",
    "forensic-artifacts",
    "forensics-colorize",
    "galleta",
    "gdb",
    "gpart",
    "gparted",
    "grokevt",
    "guymager",
    "hashdeep",
    "inetsim",
    "jadx",
    "javasnoop",
    "libhivex-bin",
    "libsmali-java",
    "lvm2",
    "lynis",
    "mac-robber",
    "magicrescue",
    "md5deep",
    "mdbtools",
    "memdump",
    "metacam",
    "missidentify",
    "myrescue",
    "nasm",
    "nasty",
    "ollydbg",
    "p7zip-full",
    "parted",
    "pasco",
    "pdf-parser",
    "pdfid",
    "pev",
    "plaso",
    "polenum",
    "pst-utils",
    "python3-capstone",
    "python3-dfdatetime",
    "python3-dfvfs",
    "python3-dfwinreg",
    "python3-distorm3",
    "radare2",
    "recoverdm",
    "recoverjpeg",
    "reglookup",
    "regripper",
    "rephrase",
    "rifiuti",
    "rifiuti2",
    "rizin-cutter",
    "rkhunter",
    "rsakeyfind",
    "rz-ghidra",
    "safecopy",
    "samdump2",
    "scalpel",
    "scrounge-ntfs",
    "sleuthkit",
    "sqlitebrowser",
    "ssdeep",
    "tcpdump",
    "tcpflow",
    "tcpick",
    "tcpreplay",
    "truecrack",
    "undbx",
    "unhide",
    "unrar",
    "unar",
    "upx-ucl",
    "vinetto",
    "wce",
    "winregfs",
    "wireshark",
    "xmount",
    "xplico",
    "yara",
  ];

  fuzzing=
  [
    "afl++",
    "sfuzz",
    "spike",
    "wfuzz",
  ];

  gpu=
  [
    "oclgausscrack",
    "truecrack",
  ];

  hardware=
  [
    "binwalk",
    "cutecom",
    "flashrom",
    "minicom",
    "openocd",
    "qemu-system-x86",
    "qemu-user",
    "radare2",
    "rizin-cutter",
    "rz-ghidra",
  ];

  identify=
  [
    "amass",
    "assetfinder",
    "cisco-auditing-tool",
    "defectdojo",
    "exploitdb",
    "hb-honeypot",
    "kali-autopilot",
    "maltego",
    "maryam",
    "nipper-ng",
    "osrframework",
    "spiderfoot",
    "tiger",
    "wapiti",
    "witnessme",
    "zaproxy",
  ];

  information_gathering=
  [
    "0trace",
    "arping",
    "iputils-arping",
    "braa",
    "dmitry",
    "dnsenum",
    "dnsmap",
    "dnsrecon",
    "dnstracer",
    "dnswalk",
    "enum4linux",
    "fierce",
    "firewalk",
    "fping",
    "fragrouter",
    "ftester",
    "hping3",
    "ike-scan",
    "intrace",
    "irpas",
    "lbd",
    "legion",
    "maltego",
    "masscan",
    "metagoofil",
    "nbtscan",
    "ncat",
    "netdiscover",
    "netmask",
    "nmap",
    "onesixtyone",
    "p0f",
    "qsslcaudit",
    "recon-ng",
    "smbmap",
    "smtp-user-enum",
    "snmpcheck",
    "ssldump",
    "sslh",
    "sslscan",
    "sslyze",
    "swaks",
    "thc-ipv6",
    "theharvester",
    "tlssled",
    "twofi",
    "unicornscan",
    "urlcrazy",
    "wafw00f",
  ];

  passwords=
  [
    "cewl",
    "chntpw",
    "cisco-auditing-tool",
    "cmospwd",
    "crackle",
    "creddump7",
    "crunch",
    "fcrackzip",
    "freerdp2-x11",
    "gpp-decrypt",
    "hash-identifier",
    "hashcat",
    "hashcat-utils",
    "hashid",
    "hydra",
    "hydra-gtk",
    "john",
    "johnny",
    "kali-tools-gpu",
    "maskprocessor",
    "medusa",
    "mimikatz",
    "ncrack",
    "onesixtyone",
    "ophcrack",
    "ophcrack-cli",
    "pack",
    "pack2",
    "passing-the-hash",
    "patator",
    "pdfcrack",
    "pipal",
    "polenum",
    "rainbowcrack",
    "rarcrack",
    "rcracki-mt",
    "rsmangler",
    "samdump2",
    "seclists",
    "sipcrack",
    "sipvicious",
    "smbmap",
    "sqldict",
    "statsprocessor",
    "sucrack",
    "thc-pptp-bruter",
    "truecrack",
    "twofi",
    "wordlists",
  ];

  post_exploitation=
  [
    "backdoor-factory",
    "cymothoa",
    "dbd",
    "dns2tcp",
    "exe2hexbat",
    "iodine",
    "laudanum",
    "mimikatz",
    "miredo",
    "nishang",
    "powersploit",
    "proxychains4",
    "proxytunnel",
    "ptunnel",
    "pwnat",
    "sbd",
    "shellter",
    "sslh",
    "stunnel4",
    "udptunnel",
    "veil",
    "webacoo",
    "weevely",
  ];

  protect=
  [
    "clamav",
    "cryptsetup",
    "cryptsetup-initramfs",
    "cryptsetup-nuke-password",
    "fwbuilder",
  ];

  recover=
  [
    "ddrescue",
    "ext3grep",
    "extundelete",
    "myrescue",
    "recoverdm",
    "recoverjpeg",
    "scrounge-ntfs",
    "undbx",
  ];

  reporting=
  [
    "cutycapt",
    "dradis",
    "eyewitness",
    "faraday",
    "maltego",
    "metagoofil",
    "pipal",
    "recordmydesktop",
  ];

  respond=
  [
    "ewf-tools",
    "ghidra",
    "guymager",
    "hashrat",
    "impacket-scripts",
    "kali-tools-forensics",
    "netsniff-ng",
  ];

  reverse_engineering=
  [
    "apktool",
    "bytecode-viewer",
    "clang",
    "dex2jar",
    "edb-debugger",
    "jadx",
    "javasnoop",
    "jd-gui",
    "metasploit-framework",
    "ollydbg",
    "radare2",
    "rizin-cutter",
    "rz-ghidra",
  ];

  rfid=
  [
    "gnuradio",
    "libfreefare-bin",
    "libnfc-bin",
    "mfcuk",
    "mfoc",
    "mfterm",
    "proxmark3",
    "rfdump",
  ];

  sdr=
  [
    "chirp",
    "gnuradio",
    "gqrx-sdr",
    "gr-air-modes",
    "gr-iqbal",
    "gr-osmosdr",
    "hackrf",
    "inspectrum",
    "kalibrate-rtl",
    "multimon-ng",
    "rtlsdr-scanner",
    "uhd-host",
    "uhd-images",
  ];

  sniffing_spoofing=
  [
    "bettercap",
    "darkstat",
    "dnschef",
    "driftnet",
    "dsniff",
    "ettercap-graphical",
    "ettercap-text-only",
    "ferret-sidejack",
    "fiked",
    "hamster-sidejack",
    "hexinject",
    "isr-evilgrade",
    "macchanger",
    "mitmproxy",
    "netsniff-ng",
    "rebind",
    "responder",
    "sniffjoke",
    "sslsniff",
    "sslsplit",
    "tcpflow",
    "tcpreplay",
    "wifi-honey",
    "wireshark",
    "yersinia",
  ]

  social_engineering=
  [
    "backdoor-factory",
    "beef-xss",
    "maltego",
    "msfpc",
    "set",
    "veil",
  ];

  voip=
  [
    "enumiax",
    "iaxflood",
    "inviteflood",
    "libfindrtp",
    "nmap",
    "ohrwurm",
    "protos-sip",
    "rtpbreak",
    "rtpflood",
    "rtpinsertsound",
    "rtpmixsound",
    "sctpscan",
    "siparmyknife",
    "sipcrack",
    "sipp",
    "sipvicious",
    "voiphopper",
    "wireshark",
  ];

  vulnerability=
  [
    "afl++",
    "bed",
    "cisco-auditing-tool",
    "cisco-global-exploiter",
    "cisco-ocs",
    "cisco-torch",
    "copy-router-config",
    "dhcpig",
    "enumiax",
    "gvm",
    "iaxflood",
    "inviteflood",
    "legion",
    "lynis",
    "nikto",
    "nmap",
    "ohrwurm",
    "peass",
    "protos-sip",
    "rtpbreak",
    "rtpflood",
    "rtpinsertsound",
    "rtpmixsound",
    "sctpscan",
    "sfuzz",
    "siege",
    "siparmyknife",
    "sipp",
    "sipsak",
    "sipvicious",
    "slowhttptest",
    "spike",
    "t50",
    "thc-ssl-dos",
    "unix-privesc-check",
    "voiphopper",
    "yersinia",
  ];

  web=
  [
    "apache-users",
    "apache2",
    "beef-xss",
    "burpsuite",
    "cadaver",
    "commix",
    "cutycapt",
    "davtest",
    "default-mysql-server",
    "dirb",
    "dirbuster",
    "dotdotpwn",
    "eyewitness",
    "ferret-sidejack",
    "ftester",
    "hakrawler",
    "hamster-sidejack",
    "heartleech",
    "httprint",
    "httrack",
    "hydra",
    "hydra-gtk",
    "jboss-autopwn",
    "joomscan",
    "jsql-injection",
    "laudanum",
    "lbd",
    "maltego",
    "medusa",
    "mitmproxy",
    "ncrack",
    "nikto",
    "nishang",
    "nmap",
    "oscanner",
    "owasp-mantra-ff",
    "padbuster",
    "paros",
    "patator",
    "php",
    "php-mysql",
    "proxychains4",
    "proxytunnel",
    "qsslcaudit",
    "redsocks",
    "sidguesser",
    "siege",
    "skipfish",
    "slowhttptest",
    "sqldict",
    "sqlitebrowser",
    "sqlmap",
    "sqlninja",
    "sqlsus",
    "ssldump",
    "sslh",
    "sslscan",
    "sslsniff",
    "sslsplit",
    "sslyze",
    "stunnel4",
    "thc-ssl-dos",
    "tlssled",
    "tnscmd10g",
    "uniscan",
    "wafw00f",
    "wapiti",
    "watobo",
    "webacoo",
    "webscarab",
    "webshells",
    "weevely",
    "wfuzz",
    "whatweb",
    "wireshark",
    "wpscan",
    "xsser",
    "zaproxy",
  ];

  windows_resources=
  [
    "dbd",
    "dnschef",
    "heartleech",
    "hyperion",
    "mimikatz",
    "ncat-w32",
    "ollydbg",
    "powercat",
    "regripper",
    "sbd",
    "secure-socket-funneling-windows-binaries",
    "shellter",
    "tftpd32",
    "wce",
    "windows-binaries",
    "windows-privesc-check",
  ];

  wireless=
  [
    ...this["802_11"],
    ...this.bluetooth,
    ...this.rfid,
    ...this.sdr,
    "rfcat",
    "rfkill",
    "sakis3g",
    "spectools",
    "wireshark",
  ];

  constructor()
  {
    this.all=[];
    for(let key in this) if(key!="all"&&key!="top10") this.all.push(...(this[key] as string[]));
    this.all=Array.from(new Set(this.all));
  }
}

export default new Toollist();